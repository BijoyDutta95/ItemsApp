[{"E:\\InternshipAssignments\\items-app\\src\\index.js":"1","E:\\InternshipAssignments\\items-app\\src\\App.js":"2","E:\\InternshipAssignments\\items-app\\src\\components\\Home.js":"3","E:\\InternshipAssignments\\items-app\\src\\components\\EditItem.js":"4","E:\\InternshipAssignments\\items-app\\src\\components\\AddItem.js":"5","E:\\InternshipAssignments\\items-app\\src\\components\\ItemList.js":"6","E:\\InternshipAssignments\\items-app\\src\\components\\Heading.js":"7","E:\\InternshipAssignments\\items-app\\src\\Context\\GlobalState.js":"8","E:\\InternshipAssignments\\items-app\\src\\Context\\AppReducer.js":"9"},{"size":156,"mtime":1609698660769,"results":"10","hashOfConfig":"11"},{"size":635,"mtime":1609767679256,"results":"12","hashOfConfig":"11"},{"size":275,"mtime":1609703145129,"results":"13","hashOfConfig":"11"},{"size":1321,"mtime":1609758147104,"results":"14","hashOfConfig":"11"},{"size":1030,"mtime":1609756789330,"results":"15","hashOfConfig":"11"},{"size":1123,"mtime":1609766739019,"results":"16","hashOfConfig":"11"},{"size":365,"mtime":1609766126416,"results":"17","hashOfConfig":"11"},{"size":948,"mtime":1609758084987,"results":"18","hashOfConfig":"11"},{"size":797,"mtime":1609757257733,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"xlsrn6",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"E:\\InternshipAssignments\\items-app\\src\\index.js",[],["42","43"],"E:\\InternshipAssignments\\items-app\\src\\App.js",[],"E:\\InternshipAssignments\\items-app\\src\\components\\Home.js",[],"E:\\InternshipAssignments\\items-app\\src\\components\\EditItem.js",["44"],"import React,{useState, useContext, useEffect} from 'react'\r\nimport {Link,useHistory,userHistory} from 'react-router-dom'\r\nimport './Item.css'\r\nimport {GlobalContext} from '../Context/GlobalState'\r\n\r\nconst EditItem = (props) => {\r\n\r\n    const [selectedItem, setSelectedItem]=useState({\r\n        id: '',\r\n        name: ''\r\n    });\r\n    const {items, editItem} =useContext(GlobalContext)\r\n    const history = useHistory();\r\n    const currentItemID=props.match.params.id;\r\n\r\n    useEffect(()=>{\r\n        const itemId=currentItemID;\r\n        const selectedItem= items.find(item => item.id === itemId)\r\n        setSelectedItem(selectedItem)\r\n    }, [currentItemID, items])\r\n    const onSubmit = () =>{\r\n        editItem(selectedItem)\r\n        history.push(\"/\");\r\n    }\r\n    const onChange=(e)=>{\r\n        setSelectedItem({...selectedItem,[e.target.name]:e.target.value})\r\n    }\r\n\r\n    return (\r\n        <form className=\"addItemForm\" onSubmit={onSubmit}>\r\n            <label>Item Name</label>\r\n            <input type=\"text\" name=\"name\" value={selectedItem.name} onChange={onChange} placeholder=\"Item Name\"></input>\r\n            <div>\r\n                <button type=\"submit\">Update</button>\r\n                <Link to=\"/\" ><button>Cancel</button></Link>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default EditItem\r\n","E:\\InternshipAssignments\\items-app\\src\\components\\AddItem.js",["45"],"import React,{useState, useContext} from 'react'\r\nimport {Link,useHistory,userHistory} from 'react-router-dom'\r\nimport './Item.css'\r\nimport {GlobalContext} from '../Context/GlobalState'\r\nimport {v4 as uuid} from 'uuid';\r\n\r\nconst AddItem = () => {\r\n    const [name, setName]=useState('');\r\n    const {addItem} =useContext(GlobalContext)\r\n    const history = useHistory();\r\n    const onSubmit = () =>{\r\n        const newItem= {\r\n            id:uuid(),\r\n            name\r\n        }\r\n        addItem(newItem);\r\n        history.push(\"/\");\r\n    }\r\n    const onChange=(e)=>{\r\n        setName(e.target.value)\r\n    }\r\n    return (\r\n        <form className=\"addItemForm\" onSubmit={onSubmit}>\r\n            <label>Item Name</label>\r\n            <input type=\"text\" value={name} onChange={onChange} placeholder=\"Item Name\"></input>\r\n            <div>\r\n                <button type=\"submit\">Add Item</button>\r\n                <Link to=\"/\" ><button>Cancel</button></Link>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","E:\\InternshipAssignments\\items-app\\src\\components\\ItemList.js",[],"E:\\InternshipAssignments\\items-app\\src\\components\\Heading.js",[],"E:\\InternshipAssignments\\items-app\\src\\Context\\GlobalState.js",[],"E:\\InternshipAssignments\\items-app\\src\\Context\\AppReducer.js",["46"],"export default (state,action) => {\r\n    switch (action.type) {\r\n\r\n        case 'REMOVE_ITEM':\r\n            return {\r\n                items: state.items.filter(item => {\r\n                    return item.id !== action.payload\r\n                })\r\n            }\r\n\r\n        case 'ADD_ITEM':\r\n            return{\r\n                items: [action.payload, ...state.items]\r\n            }\r\n\r\n        case 'EDIT_ITEM':\r\n            const updatedItem=action.payload;\r\n            const updateditems=state.items.map(item =>{\r\n                if(item.id === updatedItem.id){\r\n                    return updatedItem;\r\n                }\r\n                return item\r\n            })\r\n            return{\r\n                items:updateditems\r\n            }    \r\n        default:\r\n            return state;\r\n    }\r\n}",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":2,"column":25,"nodeType":"53","messageId":"54","endLine":2,"endColumn":36},{"ruleId":"51","severity":1,"message":"52","line":2,"column":25,"nodeType":"53","messageId":"54","endLine":2,"endColumn":36},{"ruleId":"55","severity":1,"message":"56","line":1,"column":1,"nodeType":"57","endLine":30,"endColumn":2},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'userHistory' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]